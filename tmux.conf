set-window-option -g xterm-keys on
set -g default-terminal "screen-256color"

unbind C-b
set-option -g prefix C-g
bind-key C-g send-prefix
set-window-option -g mode-keys vi

# Vim-style copy/paste
unbind [
bind y copy-mode
unbind p
bind p paste-buffer
#bind -t vi-copy H start-of-line
#bind -t vi-copy L end-of-line
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Mouse
set -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=red]#H"
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-fg yellow

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

unbind Left
unbind Right
unbind Up
unbind Down

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Highlight active window
set-window-option -g window-status-current-bg green

# Create splits and vertical splits
bind-key v  split-window -h
bind-key ^V split-window -h
bind-key s  split-window -v
bind-key ^S split-window -v

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Pane movement
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

# Window movement
bind-key -r H select-window -t :-
bind-key -r L select-window -t :+

# Pane temporary maximizing
unbind _
bind _ new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
unbind -
bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -sel clipboard -i"

# .. Copy/Paste shortcuts: clipboards + or *
# C-c: save into system clipboard (+). With preselection.
unbind C-c
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.
unbind C-v
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
# C-d: save into selection clipboard (*). With preselection.
unbind C-d
bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-f: copy from * clipboard.
unbind C-f
bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# fast pane locating via increment/decrement order
unbind ^A
bind -r ^A select-pane -t :.+
unbind ^X
bind -r ^X select-pane -t :.-

# urxvt tab like window switching (-n means no prior escape-seq/prefix)
#bind -n S-down new-window
#bind -n S-left prev
#bind -n S-right next
#bind -n C-left swap-window -t -1
#bind -n C-right swap-window -t +1

# DVTM style pane selection
#bind 0 select-pane -t 0
#bind 1 select-pane -t 1
#bind 2 select-pane -t 2
#...

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# reload tmux config
unbind r
bind r source-file ~/.tmux.conf \; display 'Reloaded tmux config.'

