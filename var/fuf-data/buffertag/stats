{'word': 'led_driver_turn_on', 'pattern': 'on'}
{'word': 'main', 'pattern': 'ma'}
{'word': 'main', 'pattern': 'mai'}
{'word': 'compare_clustering_performances', 'pattern': 'per'}
{'word': 'RunShellCommand', 'pattern': 'she'}
{'word': 'mainloop', 'pattern': 'ma'}
{'word': 'atoi', 'pattern': 'at'}
{'word': 'tearDown', 'pattern': 'te'}
{'word': 'TDD_Mode', 'pattern': 'TDD'}
{'word': 'capitalGainsTaxIncurred', 'pattern': 'inc'}
{'word': 'capitalGainsTaxIncurred', 'pattern': 'incu'}
{'word': 'SsbSipMfcEncOpen', 'pattern': 'op'}
{'word': 'SsbSipMfcEncSetOutBuf', 'pattern': 'ou'}
{'word': 'SsbSipMfcEncSetInBuf', 'pattern': 'set'}
{'word': 's3c_mem_ioctl', 'pattern': 'io'}
{'word': 'capitalGains', 'pattern': 'ca'}
{'word': 'startingPrincipalMatchesConstructor', 'pattern': 'ma'}
{'word': 'capitalGainsTaxIncludedInEndingBalance', 'pattern': 'inc'}
{'word': 'endingBalance', 'pattern': 'ba'}
{'word': 'endingBalance', 'pattern': 'en'}
{'word': 'withdraw', 'pattern': 'wi'}
{'word': 'SsbSipMfcEncGetInBuf', 'pattern': 'ge'}
{'word': 'SsbSipMfcDecOpen', 'pattern': 'op'}
{'word': 'SsbSipMfcDecGetInBuf', 'pattern': 'ge'}
{'word': 'CComplete', 'pattern': 'c'}
{'word': 'SsbSipMfcEncGetOutBuf', 'pattern': 'out'}
{'word': 'SsbSipH264EncodeGetInBuf', 'pattern': 'ge'}
{'word': 'GetFrame', 'pattern': 'ge'}
{'word': 'DecodeHeader', 'pattern': 'h'}
{'word': 'tile_4x2_read', 'pattern': 're'}
{'word': 'SsbSipMfcDecGetInBuf', 'pattern': 'in'}
{'word': 'SsbSipMfcDecGetInBuf', 'pattern': 'get'}
{'word': 'mfc_ioctl', 'pattern': 'io'}
{'word': 'nextYear', 'pattern': 'ne'}
{'word': 'load_frame', 'pattern': 'lo'}
{'word': 'convert_chroma_to_420', 'pattern': 'con'}
{'word': 'convert_chroma_to_420', 'pattern': 'co'}
{'word': 'draw_frame', 'pattern': 'dr'}
{'word': 'tile_to_linear_4x2', 'pattern': 'til'}
{'word': 'load_frame', 'pattern': 'loa'}
{'word': 'mfc_decode_one_frame', 'pattern': 'one'}
{'word': 'mfc_exe_decode', 'pattern': 'exe'}
{'word': 'mfc_alloc_codec_buffer', 'pattern': 'allo'}
{'word': 'mfc_init_decode', 'pattern': 'init'}
{'word': 'SsbSipMfcDecInit', 'pattern': 'ini'}
{'word': 'DecodeHeader', 'pattern': 'he'}
{'word': 'DecInit', 'pattern': 'in'}
{'word': 'DecDeinit', 'pattern': 'in'}
{'word': 'SsbSipMfcDecGetMmapSize', 'pattern': 'get'}
{'word': 'DecodeFrame', 'pattern': 'fr'}
{'word': 'GetFrame', 'pattern': 'fr'}
{'word': 'mfc_alloc_context_buffer', 'pattern': 'con'}
{'word': 'vimprj#init', 'pattern': 'ini'}
{'word': 'ParseNewVimprjRoot', 'pattern': 'pars'}
{'word': 'NeedSkipBuffer', 'pattern': 'sk'}
{'word': 'ExecHooks', 'pattern': 'ex'}
{'word': 'NeedSkipBuffer', 'pattern': 'nee'}
{'word': 'ParseNewVimprjRoot', 'pattern': 'par'}
{'word': 'AddNewVimprjRoot', 'pattern': 'new'}
{'word': 'GetVimprjRootOfFile', 'pattern': 'root'}
{'word': 'SsbSipH264EncodeInit', 'pattern': 'in'}
{'word': 'SsbSipH264EncodeGetOutBuf', 'pattern': 'ou'}
{'word': 'OnBufEnter', 'pattern': 'buf'}
{'word': 'SourceVimprjFiles', 'pattern': 'sou'}
{'word': 'vimprj#applyVimprjSettings', 'pattern': 'app'}
{'word': 'IsBufSwitched', 'pattern': 'bu'}
{'word': 'IsBufSwitched', 'pattern': 'sw'}
{'word': 'mfc_enc_init', 'pattern': 'in'}
{'word': 'mfc_dec_decode_frame', 'pattern': 'de'}
{'word': 'mfc_dec_init', 'pattern': 'in'}
{'word': 'mfc_dec_decode_header', 'pattern': 'he'}
{'word': 'mfc_dec_init', 'pattern': 'i'}
{'word': 'mfc_dec_decode_header', 'pattern': 'h'}
{'word': 'mfc_dec_init', 'pattern': 'mfc_dec_init'}
{'word': 'SsbSipH264DecodeInit', 'pattern': 'in'}
{'word': 'mfc_dec_decode_frame', 'pattern': 'def'}
{'word': 'pad_chain', 'pattern': 'pa'}
{'word': 'handle_codec_data', 'pattern': 'han'}
{'word': 'configure_caps', 'pattern': 'co'}
{'word': 'instance_init', 'pattern': 'ins'}
{'word': 'pad_chain', 'pattern': 'pad_chain'}
{'word': 'SetCodecType', 'pattern': 'co'}
{'word': 'pad_chain', 'pattern': 'pad'}
{'word': 'change_state', 'pattern': 'sta'}
{'word': 'pad_chain', 'pattern': 'ch'}
{'word': 'pad_chain', 'pattern': 'cha'}
{'word': 'init_node', 'pattern': 'init_node'}
{'word': 'mfc_dec_decode_frame', 'pattern': 'mfc_dec_'}
{'word': 'MeasureTime', 'pattern': 'mea'}
{'word': 'mfc_dec_get_frame', 'pattern': 'fr'}
{'word': 'base_src_event', 'pattern': 'src'}
{'word': 'handle_codec_data', 'pattern': 'hc'}
{'word': 'handle_codec_data', 'pattern': 'hcd'}
{'word': 'configure_caps', 'pattern': 'ccap'}
{'word': 'sink_setcaps', 'pattern': 'sse'}
{'word': 'base_src_event', 'pattern': 'bsr'}
{'word': 'sink_event', 'pattern': 'sink'}
{'word': 'send_buffer', 'pattern': 'send'}
{'word': 'output_loop', 'pattern': 'output_loop'}
{'word': 'sink_setcaps', 'pattern': 'setc'}
